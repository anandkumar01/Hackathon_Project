<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="20" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-27T12:29:26 IST" name="Suite" finished-at="2024-02-27T12:42:28 IST" duration-ms="781652">
    <groups>
    </groups>
    <test started-at="2024-02-27T12:29:26 IST" name="Chrome Test" finished-at="2024-02-27T12:36:57 IST" duration-ms="450937">
      <class name="testCases.TC004_UsedCarDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC004_UsedCarDetails@673fdbce]" started-at="2024-02-27T12:31:56 IST" name="initializeBrowser" finished-at="2024-02-27T12:32:10 IST" duration-ms="13709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testUsedCars()[pri:0, instance:testCases.TC004_UsedCarDetails@673fdbce]" started-at="2024-02-27T12:32:10 IST" name="testUsedCars" finished-at="2024-02-27T12:32:41 IST" duration-ms="31116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsedCars -->
        <test-method signature="testWritePopularCarModel()[pri:1, instance:testCases.TC004_UsedCarDetails@673fdbce]" started-at="2024-02-27T12:32:41 IST" name="testWritePopularCarModel" finished-at="2024-02-27T12:32:42 IST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWritePopularCarModel -->
        <test-method signature="testWriteAllPopularCarModelDetails()[pri:2, instance:testCases.TC004_UsedCarDetails@673fdbce]" started-at="2024-02-27T12:32:42 IST" name="testWriteAllPopularCarModelDetails" finished-at="2024-02-27T12:35:57 IST" duration-ms="194859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteAllPopularCarModelDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC004_UsedCarDetails@673fdbce]" started-at="2024-02-27T12:35:57 IST" name="closeBrowser" finished-at="2024-02-27T12:35:58 IST" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC004_UsedCarDetails -->
      <class name="testCases.TC005_HealthInsurance">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC005_HealthInsurance@5965d37]" started-at="2024-02-27T12:35:58 IST" name="initializeBrowser" finished-at="2024-02-27T12:36:05 IST" duration-ms="7057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testHealthInsurance()[pri:0, instance:testCases.TC005_HealthInsurance@5965d37]" started-at="2024-02-27T12:36:05 IST" name="testHealthInsurance" finished-at="2024-02-27T12:36:40 IST" duration-ms="34527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHealthInsurance -->
        <test-method signature="testWriteHealthInsuranceBrandName()[pri:1, instance:testCases.TC005_HealthInsurance@5965d37]" started-at="2024-02-27T12:36:40 IST" name="testWriteHealthInsuranceBrandName" finished-at="2024-02-27T12:36:55 IST" duration-ms="15486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteHealthInsuranceBrandName -->
        <test-method signature="testWriteHealthInsurancePlan()[pri:2, instance:testCases.TC005_HealthInsurance@5965d37]" started-at="2024-02-27T12:36:55 IST" name="testWriteHealthInsurancePlan" finished-at="2024-02-27T12:36:56 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteHealthInsurancePlan -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC005_HealthInsurance@5965d37]" started-at="2024-02-27T12:36:56 IST" name="closeBrowser" finished-at="2024-02-27T12:36:57 IST" duration-ms="1323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC005_HealthInsurance -->
      <class name="testCases.TC003_CarDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC003_CarDetails@1a245833]" started-at="2024-02-27T12:30:57 IST" name="initializeBrowser" finished-at="2024-02-27T12:31:12 IST" duration-ms="14693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testCarDetails()[pri:0, instance:testCases.TC003_CarDetails@1a245833]" started-at="2024-02-27T12:31:12 IST" name="testCarDetails" finished-at="2024-02-27T12:31:53 IST" duration-ms="41025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarDetails -->
        <test-method signature="testWriteCarDetails()[pri:1, instance:testCases.TC003_CarDetails@1a245833]" started-at="2024-02-27T12:31:53 IST" name="testWriteCarDetails" finished-at="2024-02-27T12:31:55 IST" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteCarDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC003_CarDetails@1a245833]" started-at="2024-02-27T12:31:55 IST" name="closeBrowser" finished-at="2024-02-27T12:31:56 IST" duration-ms="1477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC003_CarDetails -->
      <class name="testCases.TC001_InvalidGoogleLogin">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC001_InvalidGoogleLogin@65987993]" started-at="2024-02-27T12:29:26 IST" name="initializeBrowser" finished-at="2024-02-27T12:29:34 IST" duration-ms="7517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testInvalidGoogleLogin()[pri:0, instance:testCases.TC001_InvalidGoogleLogin@65987993]" started-at="2024-02-27T12:29:34 IST" name="testInvalidGoogleLogin" finished-at="2024-02-27T12:30:07 IST" duration-ms="32656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidGoogleLogin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC001_InvalidGoogleLogin@65987993]" started-at="2024-02-27T12:30:07 IST" name="closeBrowser" finished-at="2024-02-27T12:30:08 IST" duration-ms="1204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC001_InvalidGoogleLogin -->
      <class name="testCases.TC002_BikeDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC002_BikeDetails@4007f65e]" started-at="2024-02-27T12:30:08 IST" name="initializeBrowser" finished-at="2024-02-27T12:30:15 IST" duration-ms="7070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testBikeDetails()[pri:0, instance:testCases.TC002_BikeDetails@4007f65e]" started-at="2024-02-27T12:30:15 IST" name="testBikeDetails" finished-at="2024-02-27T12:30:49 IST" duration-ms="34476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBikeDetails -->
        <test-method signature="testWriteBikeDetails()[pri:1, instance:testCases.TC002_BikeDetails@4007f65e]" started-at="2024-02-27T12:30:49 IST" name="testWriteBikeDetails" finished-at="2024-02-27T12:30:56 IST" duration-ms="6474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteBikeDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC002_BikeDetails@4007f65e]" started-at="2024-02-27T12:30:56 IST" name="closeBrowser" finished-at="2024-02-27T12:30:57 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC002_BikeDetails -->
    </test> <!-- Chrome Test -->
    <test started-at="2024-02-27T12:36:57 IST" name=" Edge Test" finished-at="2024-02-27T12:42:28 IST" duration-ms="330677">
      <class name="testCases.TC004_UsedCarDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC004_UsedCarDetails@5a5a729f]" started-at="2024-02-27T12:38:40 IST" name="initializeBrowser" finished-at="2024-02-27T12:38:50 IST" duration-ms="10319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testUsedCars()[pri:0, instance:testCases.TC004_UsedCarDetails@5a5a729f]" started-at="2024-02-27T12:38:50 IST" name="testUsedCars" finished-at="2024-02-27T12:39:20 IST" duration-ms="30423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsedCars -->
        <test-method signature="testWritePopularCarModel()[pri:1, instance:testCases.TC004_UsedCarDetails@5a5a729f]" started-at="2024-02-27T12:39:21 IST" name="testWritePopularCarModel" finished-at="2024-02-27T12:39:21 IST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWritePopularCarModel -->
        <test-method signature="testWriteAllPopularCarModelDetails()[pri:2, instance:testCases.TC004_UsedCarDetails@5a5a729f]" started-at="2024-02-27T12:39:21 IST" name="testWriteAllPopularCarModelDetails" finished-at="2024-02-27T12:41:25 IST" duration-ms="124312" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The workbook already contains a sheet named 'Maruti 800']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The workbook already contains a sheet named 'Maruti 800'
at org.apache.poi.xssf.usermodel.XSSFWorkbook.validateSheetName(XSSFWorkbook.java:982)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:926)
at utilities.WriteExcelData.writeAllPopularCarModelDetails(WriteExcelData.java:235)
at testCases.TC004_UsedCarDetails.testWriteAllPopularCarModelDetails(TC004_UsedCarDetails.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteAllPopularCarModelDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC004_UsedCarDetails@5a5a729f]" started-at="2024-02-27T12:41:25 IST" name="closeBrowser" finished-at="2024-02-27T12:41:26 IST" duration-ms="1299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC004_UsedCarDetails -->
      <class name="testCases.TC005_HealthInsurance">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC005_HealthInsurance@4b520ea8]" started-at="2024-02-27T12:41:26 IST" name="initializeBrowser" finished-at="2024-02-27T12:41:34 IST" duration-ms="7779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testHealthInsurance()[pri:0, instance:testCases.TC005_HealthInsurance@4b520ea8]" started-at="2024-02-27T12:41:34 IST" name="testHealthInsurance" finished-at="2024-02-27T12:42:11 IST" duration-ms="36467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHealthInsurance -->
        <test-method signature="testWriteHealthInsuranceBrandName()[pri:1, instance:testCases.TC005_HealthInsurance@4b520ea8]" started-at="2024-02-27T12:42:11 IST" name="testWriteHealthInsuranceBrandName" finished-at="2024-02-27T12:42:26 IST" duration-ms="15388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteHealthInsuranceBrandName -->
        <test-method signature="testWriteHealthInsurancePlan()[pri:2, instance:testCases.TC005_HealthInsurance@4b520ea8]" started-at="2024-02-27T12:42:26 IST" name="testWriteHealthInsurancePlan" finished-at="2024-02-27T12:42:26 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteHealthInsurancePlan -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC005_HealthInsurance@4b520ea8]" started-at="2024-02-27T12:42:26 IST" name="closeBrowser" finished-at="2024-02-27T12:42:28 IST" duration-ms="1473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC005_HealthInsurance -->
      <class name="testCases.TC003_CarDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC003_CarDetails@97e93f1]" started-at="2024-02-27T12:38:23 IST" name="initializeBrowser" finished-at="2024-02-27T12:38:38 IST" duration-ms="15032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testCarDetails()[pri:0, instance:testCases.TC003_CarDetails@97e93f1]" started-at="2024-02-27T12:38:38 IST" name="testCarDetails" finished-at="2024-02-27T12:38:38 IST" duration-ms="50" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img[@data-track-label="zw-header-logo"]"}
  (Session info: MicrosoftEdge=122.0.2365.52)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ae3936ebed538a602bf4759ac67302c0, findElement {using=xpath, value=//img[@data-track-label="zw-header-logo"]}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 122.0.2365.52, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:50073}, msedge: {msedgedriverVersion: 122.0.2365.52 (dcf246d1e496..., userDataDir: C:\Windows\SystemTemp\scope...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50073/devtoo..., se:cdpVersion: 122.0.2365.52, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ae3936ebed538a602bf4759ac67302c0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img[@data-track-label="zw-header-logo"]"}
  (Session info: MicrosoftEdge=122.0.2365.52)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ae3936ebed538a602bf4759ac67302c0, findElement {using=xpath, value=//img[@data-track-label="zw-header-logo"]}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 122.0.2365.52, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:50073}, msedge: {msedgedriverVersion: 122.0.2365.52 (dcf246d1e496..., userDataDir: C:\Windows\SystemTemp\scope...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50073/devtoo..., se:cdpVersion: 122.0.2365.52, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ae3936ebed538a602bf4759ac67302c0
at jdk.internal.reflect.GeneratedConstructorAccessor14.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at pageObjects.CarDetailsPage.hoverNewCars(CarDetailsPage.java:58)
at testCases.TC003_CarDetails.testCarDetails(TC003_CarDetails.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarDetails -->
        <test-method signature="testWriteCarDetails()[pri:1, instance:testCases.TC003_CarDetails@97e93f1]" started-at="2024-02-27T12:38:38 IST" name="testWriteCarDetails" finished-at="2024-02-27T12:38:38 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteCarDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC003_CarDetails@97e93f1]" started-at="2024-02-27T12:38:38 IST" name="closeBrowser" finished-at="2024-02-27T12:38:40 IST" duration-ms="1405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC003_CarDetails -->
      <class name="testCases.TC001_InvalidGoogleLogin">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC001_InvalidGoogleLogin@7a6d7e92]" started-at="2024-02-27T12:36:57 IST" name="initializeBrowser" finished-at="2024-02-27T12:37:26 IST" duration-ms="28618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testInvalidGoogleLogin()[pri:0, instance:testCases.TC001_InvalidGoogleLogin@7a6d7e92]" started-at="2024-02-27T12:37:26 IST" name="testInvalidGoogleLogin" finished-at="2024-02-27T12:37:33 IST" duration-ms="7354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidGoogleLogin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC001_InvalidGoogleLogin@7a6d7e92]" started-at="2024-02-27T12:37:33 IST" name="closeBrowser" finished-at="2024-02-27T12:37:35 IST" duration-ms="1445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC001_InvalidGoogleLogin -->
      <class name="testCases.TC002_BikeDetails">
        <test-method is-config="true" signature="initializeBrowser(java.lang.String)[pri:0, instance:testCases.TC002_BikeDetails@aba625]" started-at="2024-02-27T12:37:35 IST" name="initializeBrowser" finished-at="2024-02-27T12:37:46 IST" duration-ms="11751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="testBikeDetails()[pri:0, instance:testCases.TC002_BikeDetails@aba625]" started-at="2024-02-27T12:37:46 IST" name="testBikeDetails" finished-at="2024-02-27T12:38:19 IST" duration-ms="33072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBikeDetails -->
        <test-method signature="testWriteBikeDetails()[pri:1, instance:testCases.TC002_BikeDetails@aba625]" started-at="2024-02-27T12:38:19 IST" name="testWriteBikeDetails" finished-at="2024-02-27T12:38:22 IST" duration-ms="2291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteBikeDetails -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testCases.TC002_BikeDetails@aba625]" started-at="2024-02-27T12:38:22 IST" name="closeBrowser" finished-at="2024-02-27T12:38:23 IST" duration-ms="1323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TC002_BikeDetails -->
    </test> <!--  Edge Test -->
  </suite> <!-- Suite -->
</testng-results>
